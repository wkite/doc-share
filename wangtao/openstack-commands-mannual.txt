#######OpenStack初始化并创建Nova实例##########
#创建镜像
openstack image create --disk-format qcow2 --container-format bare --public --property os_type=linux --file cirros-0.3.5-x86_64-disk.img cirros

#创建供应商网络
openstack network create  --share --external --provider-physical-network public --provider-network-type flat public

#创建供应商网络子网
openstack subnet create --network public --allocation-pool start=192.168.123.50,end=192.168.123.78 --dns-nameserver 202.96.209.133 --gateway 192.168.123.254 --subnet-range 192.168.123.0/24 subnet1

#创建自服务网络1,2
openstack network create --provider-network-type vxlan admin-net1
openstack network create --provider-network-type vxlan admin-net2

#创建自服务网络1,2子网
openstack subnet create --network admin-net1 --dns-nameserver 202.96.209.133 --gateway 10.1.1.1 --subnet-range 10.1.1.0/24 net1-subnet1
openstack subnet create --network admin-net2 --dns-nameserver 202.96.209.133 --gateway 10.2.2.1 --subnet-range 10.2.2.0/24 net2-subnet1

#创建路由器
openstack router create admin-router1

#添加网络1,2子网至路由器
openstack router add subnet admin-router1 net1-subnet1
openstack router add subnet admin-router1 net2-subnet1

#设置路由器网关
openstack router set --external-gateway public admin-router1

#验证
ip netns
neutron router-port-list admin-router1

#安全组添加icmp放行(注意替换变量)
openstack security group list --project $PROJECT_ID
openstack security group rule create --ingress --ethertype IPv4 --protocol icmp $SECURITY_GROUP_ID
openstack security group rule create --ingress --ethertype IPv4 --protocol tcp --dst-port 22 $SECURITY_GROUP_ID

#创建flavor
openstack flavor create --id 256 --ram 256 --disk 0 --vcpus 1 cirros256

#创建密钥对
openstack keypair create --public-key /root/.ssh/id_rsa.pub mykey

#批量创建云主机
openstack server create --flavor cirros256 --image cirros --network admin-net1 --min 3 --max 3 --wait admin-net1
openstack server create --flavor cirros256 --image cirros --network admin-net2 --min 3 --max 3 --wait admin-net2


#########常用操作#########
#显示所有创建的云实例
openstack server list --all-projects
nova list --all_tenants

#使用Cinder卷创建云实例
openstack server create --volume <volume> --flavor 4C8G100G  --nic net-id=<net-uuid> instance-name

#删除卡在正在删除状态的Nova实例
nova reset-state <server>
openstack server delete <server>

#删除Nova服务
openstack compute service list
openstack compute service delete <service>

#Nova cell_v2检查升级
nova-manage cell_v2 list_cells
nova-status upgrade check

#Nova cell_v2发现host
nova-manage cell_v2 discover_hosts



#删除Neutron Agent
openstack network agent delete <network-agent>


#######FWAAS API 2.0操作########
#创建/列出/显示/删除防火墙规则
openstack firewall group rule create --name egress-icmp --protocol icmp --ip-version 4 --source-ip-address 10.1.1.0/24 --action allow
openstack firewall group rule create --name ingress-icmp --protocol icmp --ip-version 4 --destination-ip-address 10.1.1.0/24 --action deny
openstack firewall group rule list
openstack firewall group rule show egress-icmp

#创建/列出/显示防火墙策略
openstack firewall group policy create --firewall-rule egress-icmp 10.1.1.0-egress
openstack firewall group policy create --firewall-rule ingress-icmp 10.1.1.0-ingress
openstack firewall group policy list
openstack firewall group policy show 10.1.1.0-egress

#创建/列出/显示/删除防火墙组
openstack firewall group create --name 10.1.1.0-firewallgroup
openstack firewall group list
openstack firewall group show 10.1.1.0-firewallgroup
openstack firewall group delete 10.1.1.0-firewallgroup

##显示路由器端口
neutron router-port-list admin-router1
#绑定/解绑路由器端口
openstack firewall group set --port <name or id> 10.1.1.0-firewallgroup
openstack firewall group set --no-port 10.1.1.0-firewallgroup

#启用/禁用防火墙组
openstack firewall group set --enable 10.1.1.0-firewallgroup
openstack firewall group set --disable 10.1.1.0-firewallgroup

#创建并绑定路由器端口
openstack firewall group create --name 10.1.1.0-firewallgroup --port <name or id>


#容器操作
docker pull cirros
docker save cirros | openstack image create cirros-docker --public --container-format docker --disk-format raw
#创建容器
zun create --name test-1 -i --net network=admin-net1 --image-driver glance cirros-docker /bin/sh
#列出容器
zun list
#启动容器
zun start test




nova-manage api_db sync
nova-manage cell_v2 map_cell0
nova-manage db sync
nova-manage cell_v2 create_cell --name cell1
systemctl restart httpd

#Nova Cellv2操作
nova-manage cell_v2 create_cell --name cell2 \
--database_connection mysql+pymysql://root:password@192.168.122.120/nova_cell2?charset=utf8 \
--transport-url rabbit://stackrabbit:password@192.168.122.120:5672/nova_cell2 --verbose

nova-manage cell_v2 create_cell --name cell1 --database_connection mysql+pymysql://root:admin@192.168.122.119/nova_cell1?charset=utf8 --transport-url rabbit://stackrabbit:stackrabbit@192.168.122.119:5672/nova_cell1 --verbose

nova-manage cell_v2 create_cell --name cell2 --database_connection mysql+pymysql://root:admin@192.168.122.120/nova_cell2?charset=utf8 --transport-url rabbit://stackrabbit:stackrabbit@192.168.122.120:5672/nova_cell2 --verbose


nova-manage cell_v2 list_hosts
nova-manage cell_v2 delete_host --cell_uuid 5843805a-f175-4b25-a73c-af7edeaa6d5b --host node118
nova-manage cell_v2 list_hosts
nova-manage cell_v2 delete_cell 5843805a-f175-4b25-a73c-af7edeaa6d5b
nova-manage cell_v2 delete_cell --cell_uuid 5843805a-f175-4b25-a73c-af7edeaa6d5b




docker network create --driver=kuryr --ipam-driver=kuryr --subnet 10.2.2.0/24 --gateway 10.2.2.1 -o neutron.net.uuid=79f912ee-4d00-4e90-a581-ac1667f84e9f --scope local kuryr


/opt/stack/bin/etcdctl --endpoints http://192.168.122.118:2379 ls /docker/network/v1.0/
/opt/stack/bin/etcdctl --endpoints http://192.168.122.118:2379 member list

/opt/stack/bin/etcd --name node118 --data-dir /opt/stack/data/etcd --initial-advertise-peer-urls http://192.168.122.118:2380 --advertise-client-urls http://192.168.122.118:2379 --listen-peer-urls http://0.0.0.0:2380  --listen-client-urls http://192.168.122.118:2379




/opt/stack/bin/etcd --name node118 --data-dir /opt/stack/data/etcd --initial-advertise-peer-urls http://192.168.122.118:2380 --advertise-client-urls http://192.168.122.118:2379 --listen-client-urls http://192.168.122.118:2379

